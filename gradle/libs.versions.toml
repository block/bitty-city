[versions]
arrow = "2.1.2"
bitcoinj = "0.17"
domainApi = "0.0.1.3"
flyway = "11.15.0"
guice = "7.0.0"
hikari = "7.0.2"
jodaMoney = "2.0.2"
jooq = "3.19.15"
junit4 = "4.13.2"
junitPlatformRunner = "1.10.2"
kfsm = "0.11.2"
kotest = "5.8.0"
kotestArrow = "2.0.0"
# @pin
kotlin = "2.0.21"
kotlinBinaryCompatibilityPlugin = "0.13.2"
kotlinLogging = "7.0.13"
mavenPublish = "0.33.0"
mockk = "1.13.10"
moshi = "1.15.2"
mysql = "3.5.6"
mysqlConnector = "9.1.0"
quiver = "1.0.0"
reflections = "0.10.2"
resilience4j = "2.3.0"
slf4j = "2.0.17"
testContainersMySql = "1.21.3"
versionCatalogUpdateGradlePlugin = "0.8.3"
versionsGradlePlugin = "0.50.0"

[libraries]
arrowCore = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
bitcoinj = { module = "org.bitcoinj:bitcoinj-core", version.ref = "bitcoinj" }
domainApi = { module = "xyz.block.domainapi:domain-api", version.ref = "domainApi" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flywayMySql = { module = "org.flywaydb:flyway-mysql", version.ref = "flyway" }
guice = { module = "com.google.inject:guice", version.ref = "guice" }
guiceAssistedInject = { module = "com.google.inject.extensions:guice-assistedinject", version.ref = "guice" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
jodaMoney = { module = "org.joda:joda-money", version.ref = "jodaMoney" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooqCodegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }
jooqKotlin = { module = "org.jooq:jooq-kotlin", version.ref = "jooq" }
jooqKotlinCoroutines = { module = "org.jooq:jooq-kotlin-coroutines", version.ref = "jooq" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
junitPlatformRunner = { module = "org.junit.platform:junit-platform-runner", version.ref = "junitPlatformRunner" }
kfsm = { module = "app.cash.kfsm:kfsm", version.ref = "kfsm" }
kotestAssertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotestAssertionsArrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotestArrow" }
kotestAssertionsArrowJvm = { module = "io.kotest.extensions:kotest-assertions-arrow-jvm", version.ref = "kotestArrow" }
kotestJunitRunnerJvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotestProperty = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotlinLogging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlinLogging" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
mavenPublishGradlePlugin = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "mavenPublish" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
mySql = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mysql" }
mysqlConnectorJava = { module = "com.mysql:mysql-connector-j", version.ref = "mysqlConnector" }
quiverLib = { module = "app.cash.quiver:lib", version.ref = "quiver" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
resilience4jKotlin = { module = "io.github.resilience4j:resilience4j-kotlin", version.ref = "resilience4j" }
resilience4jRetry = { module = "io.github.resilience4j:resilience4j-retry", version.ref = "resilience4j" }
slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4jNop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j" }
testContainers = { module = "org.testcontainers:testcontainers", version.ref = "testContainersMySql" }
testContainersMySql = { module = "org.testcontainers:mysql", version.ref = "testContainersMySql" }

[bundles]
kotest = [
    "kotestAssertions",
    "kotestJunitRunnerJvm",
    "kotestProperty",
]

[plugins]
dokka = "org.jetbrains.dokka:2.0.0"
kotlinBinaryCompatibilityPlugin = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBinaryCompatibilityPlugin" }
kotlinGradlePlugin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
mavenPublish = { id = "com.vanniktech.maven.publish.base", version.ref = "mavenPublish" }
versionCatalogUpdateGradlePlugin = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdateGradlePlugin" }
versionsGradlePlugin = { id = "com.github.ben-manes.versions", version.ref = "versionsGradlePlugin" }
