/*
 * This file is generated by jOOQ.
 */
package xyz.block.bittycity.outie.jooq.generated.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime

import org.jooq.JSON
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class WithdrawalResponses(
    val id: Long? = null,
    val version: ULong? = null,
    val createdAt: LocalDateTime? = null,
    val updatedAt: LocalDateTime? = null,
    val idempotencyKey: String? = null,
    val withdrawalToken: String? = null,
    val responseSnapshot: JSON? = null,
    val errorSnapshot: JSON? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: WithdrawalResponses = other as WithdrawalResponses
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.version == null) {
            if (o.version != null)
                return false
        }
        else if (this.version != o.version)
            return false
        if (this.createdAt == null) {
            if (o.createdAt != null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        if (this.updatedAt == null) {
            if (o.updatedAt != null)
                return false
        }
        else if (this.updatedAt != o.updatedAt)
            return false
        if (this.idempotencyKey == null) {
            if (o.idempotencyKey != null)
                return false
        }
        else if (this.idempotencyKey != o.idempotencyKey)
            return false
        if (this.withdrawalToken == null) {
            if (o.withdrawalToken != null)
                return false
        }
        else if (this.withdrawalToken != o.withdrawalToken)
            return false
        if (this.responseSnapshot == null) {
            if (o.responseSnapshot != null)
                return false
        }
        else if (this.responseSnapshot != o.responseSnapshot)
            return false
        if (this.errorSnapshot == null) {
            if (o.errorSnapshot != null)
                return false
        }
        else if (this.errorSnapshot != o.errorSnapshot)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.version == null) 0 else this.version.hashCode())
        result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
        result = prime * result + (if (this.updatedAt == null) 0 else this.updatedAt.hashCode())
        result = prime * result + (if (this.idempotencyKey == null) 0 else this.idempotencyKey.hashCode())
        result = prime * result + (if (this.withdrawalToken == null) 0 else this.withdrawalToken.hashCode())
        result = prime * result + (if (this.responseSnapshot == null) 0 else this.responseSnapshot.hashCode())
        result = prime * result + (if (this.errorSnapshot == null) 0 else this.errorSnapshot.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("WithdrawalResponses (")

        sb.append(id)
        sb.append(", ").append(version)
        sb.append(", ").append(createdAt)
        sb.append(", ").append(updatedAt)
        sb.append(", ").append(idempotencyKey)
        sb.append(", ").append(withdrawalToken)
        sb.append(", ").append(responseSnapshot)
        sb.append(", ").append(errorSnapshot)

        sb.append(")")
        return sb.toString()
    }
}
