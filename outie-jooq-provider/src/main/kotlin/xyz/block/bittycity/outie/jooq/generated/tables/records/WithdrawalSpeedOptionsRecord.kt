/*
 * This file is generated by jOOQ.
 */
package xyz.block.bittycity.outie.jooq.generated.tables.records


import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.ULong

import xyz.block.bittycity.outie.jooq.generated.tables.WithdrawalSpeedOptions


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class WithdrawalSpeedOptionsRecord() : UpdatableRecordImpl<WithdrawalSpeedOptionsRecord>(WithdrawalSpeedOptions.WITHDRAWAL_SPEED_OPTIONS) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var version: ULong?
        set(value): Unit = set(1, value)
        get(): ULong? = get(1) as ULong?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var withdrawalToken: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var blockTarget: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var speed: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var totalFee: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var totalFeeFiatUnits: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var totalFeeFiatCurrency: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var serviceFee: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    open var serviceFeeMargin: Int?
        set(value): Unit = set(11, value)
        get(): Int? = get(11) as Int?

    open var approximateWaitTimeMinutes: Int?
        set(value): Unit = set(12, value)
        get(): Int? = get(12) as Int?

    open var selectable: Byte?
        set(value): Unit = set(13, value)
        get(): Byte? = get(13) as Byte?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised WithdrawalSpeedOptionsRecord
     */
    constructor(id: Long? = null, version: ULong? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null, withdrawalToken: String? = null, blockTarget: Int? = null, speed: String? = null, totalFee: Long? = null, totalFeeFiatUnits: Long? = null, totalFeeFiatCurrency: String? = null, serviceFee: Long? = null, serviceFeeMargin: Int? = null, approximateWaitTimeMinutes: Int? = null, selectable: Byte? = null): this() {
        this.id = id
        this.version = version
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        this.withdrawalToken = withdrawalToken
        this.blockTarget = blockTarget
        this.speed = speed
        this.totalFee = totalFee
        this.totalFeeFiatUnits = totalFeeFiatUnits
        this.totalFeeFiatCurrency = totalFeeFiatCurrency
        this.serviceFee = serviceFee
        this.serviceFeeMargin = serviceFeeMargin
        this.approximateWaitTimeMinutes = approximateWaitTimeMinutes
        this.selectable = selectable
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised WithdrawalSpeedOptionsRecord
     */
    constructor(value: xyz.block.bittycity.outie.jooq.generated.tables.pojos.WithdrawalSpeedOptions?): this() {
        if (value != null) {
            this.id = value.id
            this.version = value.version
            this.createdAt = value.createdAt
            this.updatedAt = value.updatedAt
            this.withdrawalToken = value.withdrawalToken
            this.blockTarget = value.blockTarget
            this.speed = value.speed
            this.totalFee = value.totalFee
            this.totalFeeFiatUnits = value.totalFeeFiatUnits
            this.totalFeeFiatCurrency = value.totalFeeFiatCurrency
            this.serviceFee = value.serviceFee
            this.serviceFeeMargin = value.serviceFeeMargin
            this.approximateWaitTimeMinutes = value.approximateWaitTimeMinutes
            this.selectable = value.selectable
            resetChangedOnNotNull()
        }
    }
}
