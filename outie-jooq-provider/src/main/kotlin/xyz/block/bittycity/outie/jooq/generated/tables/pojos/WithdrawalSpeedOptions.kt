/*
 * This file is generated by jOOQ.
 */
package xyz.block.bittycity.outie.jooq.generated.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime

import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class WithdrawalSpeedOptions(
    val id: Long? = null,
    val version: ULong? = null,
    val createdAt: LocalDateTime? = null,
    val updatedAt: LocalDateTime? = null,
    val withdrawalToken: String? = null,
    val blockTarget: Int? = null,
    val speed: String? = null,
    val totalFee: Long? = null,
    val totalFeeFiatUnits: Long? = null,
    val totalFeeFiatCurrency: String? = null,
    val serviceFee: Long? = null,
    val serviceFeeMargin: Int? = null,
    val approximateWaitTimeMinutes: Int? = null,
    val selectable: Byte? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: WithdrawalSpeedOptions = other as WithdrawalSpeedOptions
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.version == null) {
            if (o.version != null)
                return false
        }
        else if (this.version != o.version)
            return false
        if (this.createdAt == null) {
            if (o.createdAt != null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        if (this.updatedAt == null) {
            if (o.updatedAt != null)
                return false
        }
        else if (this.updatedAt != o.updatedAt)
            return false
        if (this.withdrawalToken == null) {
            if (o.withdrawalToken != null)
                return false
        }
        else if (this.withdrawalToken != o.withdrawalToken)
            return false
        if (this.blockTarget == null) {
            if (o.blockTarget != null)
                return false
        }
        else if (this.blockTarget != o.blockTarget)
            return false
        if (this.speed == null) {
            if (o.speed != null)
                return false
        }
        else if (this.speed != o.speed)
            return false
        if (this.totalFee == null) {
            if (o.totalFee != null)
                return false
        }
        else if (this.totalFee != o.totalFee)
            return false
        if (this.totalFeeFiatUnits == null) {
            if (o.totalFeeFiatUnits != null)
                return false
        }
        else if (this.totalFeeFiatUnits != o.totalFeeFiatUnits)
            return false
        if (this.totalFeeFiatCurrency == null) {
            if (o.totalFeeFiatCurrency != null)
                return false
        }
        else if (this.totalFeeFiatCurrency != o.totalFeeFiatCurrency)
            return false
        if (this.serviceFee == null) {
            if (o.serviceFee != null)
                return false
        }
        else if (this.serviceFee != o.serviceFee)
            return false
        if (this.serviceFeeMargin == null) {
            if (o.serviceFeeMargin != null)
                return false
        }
        else if (this.serviceFeeMargin != o.serviceFeeMargin)
            return false
        if (this.approximateWaitTimeMinutes == null) {
            if (o.approximateWaitTimeMinutes != null)
                return false
        }
        else if (this.approximateWaitTimeMinutes != o.approximateWaitTimeMinutes)
            return false
        if (this.selectable == null) {
            if (o.selectable != null)
                return false
        }
        else if (this.selectable != o.selectable)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.version == null) 0 else this.version.hashCode())
        result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
        result = prime * result + (if (this.updatedAt == null) 0 else this.updatedAt.hashCode())
        result = prime * result + (if (this.withdrawalToken == null) 0 else this.withdrawalToken.hashCode())
        result = prime * result + (if (this.blockTarget == null) 0 else this.blockTarget.hashCode())
        result = prime * result + (if (this.speed == null) 0 else this.speed.hashCode())
        result = prime * result + (if (this.totalFee == null) 0 else this.totalFee.hashCode())
        result = prime * result + (if (this.totalFeeFiatUnits == null) 0 else this.totalFeeFiatUnits.hashCode())
        result = prime * result + (if (this.totalFeeFiatCurrency == null) 0 else this.totalFeeFiatCurrency.hashCode())
        result = prime * result + (if (this.serviceFee == null) 0 else this.serviceFee.hashCode())
        result = prime * result + (if (this.serviceFeeMargin == null) 0 else this.serviceFeeMargin.hashCode())
        result = prime * result + (if (this.approximateWaitTimeMinutes == null) 0 else this.approximateWaitTimeMinutes.hashCode())
        result = prime * result + (if (this.selectable == null) 0 else this.selectable.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("WithdrawalSpeedOptions (")

        sb.append(id)
        sb.append(", ").append(version)
        sb.append(", ").append(createdAt)
        sb.append(", ").append(updatedAt)
        sb.append(", ").append(withdrawalToken)
        sb.append(", ").append(blockTarget)
        sb.append(", ").append(speed)
        sb.append(", ").append(totalFee)
        sb.append(", ").append(totalFeeFiatUnits)
        sb.append(", ").append(totalFeeFiatCurrency)
        sb.append(", ").append(serviceFee)
        sb.append(", ").append(serviceFeeMargin)
        sb.append(", ").append(approximateWaitTimeMinutes)
        sb.append(", ").append(selectable)

        sb.append(")")
        return sb.toString()
    }
}
