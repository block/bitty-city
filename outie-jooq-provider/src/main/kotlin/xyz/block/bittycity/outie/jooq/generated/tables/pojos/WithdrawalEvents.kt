/*
 * This file is generated by jOOQ.
 */
package xyz.block.bittycity.outie.jooq.generated.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime

import org.jooq.JSON
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class WithdrawalEvents(
    val id: ULong? = null,
    val version: ULong? = null,
    val createdAt: LocalDateTime? = null,
    val updatedAt: LocalDateTime? = null,
    val withdrawalId: Long? = null,
    val fromState: String? = null,
    val toState: String? = null,
    val isProcessed: Byte? = null,
    val withdrawalSnapshot: JSON? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: WithdrawalEvents = other as WithdrawalEvents
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.version == null) {
            if (o.version != null)
                return false
        }
        else if (this.version != o.version)
            return false
        if (this.createdAt == null) {
            if (o.createdAt != null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        if (this.updatedAt == null) {
            if (o.updatedAt != null)
                return false
        }
        else if (this.updatedAt != o.updatedAt)
            return false
        if (this.withdrawalId == null) {
            if (o.withdrawalId != null)
                return false
        }
        else if (this.withdrawalId != o.withdrawalId)
            return false
        if (this.fromState == null) {
            if (o.fromState != null)
                return false
        }
        else if (this.fromState != o.fromState)
            return false
        if (this.toState == null) {
            if (o.toState != null)
                return false
        }
        else if (this.toState != o.toState)
            return false
        if (this.isProcessed == null) {
            if (o.isProcessed != null)
                return false
        }
        else if (this.isProcessed != o.isProcessed)
            return false
        if (this.withdrawalSnapshot == null) {
            if (o.withdrawalSnapshot != null)
                return false
        }
        else if (this.withdrawalSnapshot != o.withdrawalSnapshot)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.version == null) 0 else this.version.hashCode())
        result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
        result = prime * result + (if (this.updatedAt == null) 0 else this.updatedAt.hashCode())
        result = prime * result + (if (this.withdrawalId == null) 0 else this.withdrawalId.hashCode())
        result = prime * result + (if (this.fromState == null) 0 else this.fromState.hashCode())
        result = prime * result + (if (this.toState == null) 0 else this.toState.hashCode())
        result = prime * result + (if (this.isProcessed == null) 0 else this.isProcessed.hashCode())
        result = prime * result + (if (this.withdrawalSnapshot == null) 0 else this.withdrawalSnapshot.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("WithdrawalEvents (")

        sb.append(id)
        sb.append(", ").append(version)
        sb.append(", ").append(createdAt)
        sb.append(", ").append(updatedAt)
        sb.append(", ").append(withdrawalId)
        sb.append(", ").append(fromState)
        sb.append(", ").append(toState)
        sb.append(", ").append(isProcessed)
        sb.append(", ").append(withdrawalSnapshot)

        sb.append(")")
        return sb.toString()
    }
}
